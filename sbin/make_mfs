#!/bin/sh

PLAY_THE_JOB(){

fsck -fy / && mount -uw /

TMP_FOLDER=/tmp/rofs.$RANDOM
mkdir $TMP_FOLDER
mkdir -p /mfs/{dev,var}

/usr/local/bin/rsync -vhaz --delete -f "- *.sock" /var/ /mfs/var/
rm -rf /var/*

cp /dev/MAKEDEV /mfs/dev
cd /mfs/dev && /dev/MAKEDEV all

# /var, allocate 400 MB
echo "swap /var mfs rw,-P=/mfs/var,-s400m,nodev 0 0" >> /etc/fstab

# /dev, allocate 4 MB
echo "swap /dev mfs rw,-P=/mfs/dev,-s4m,-i128,nosuid,noexec 0 0" >> /etc/fstab

# /tmp, allocate 40 MB
echo "swap /tmp mfs rw,-s40m,nodev,nosuid,noexec 0 0" >> /etc/fstab

sed 's/ffs rw/ffs ro/' /etc/fstab > $TMP_FOLDER/fstab
rm /etc/fstab && install -m 644 $TMP_FOLDER/fstab /etc

echo /usr/local/sbin/update_disk >> /etc/rc.shutdown

# sync every 2 hours
echo "*       */2     *       *       *       /usr/local/sbin/update_disk >/dev/null 2>&1" >> /var/cron/tabs/root

rm /etc/mfs.state
echo 2 > /etc/mfs.state

rm -rf $TMP_FOLDER
}

QUERY_MODE=$(sysctl kern.securelevel)

if [ "$QUERY_MODE" == "kern.securelevel=0" ]; then

	if [ -f /etc/mfs.state ]; then
		LEVEL=$(cat /etc/mfs.state)

		if [ $LEVEL == 1 ]; then
			PLAY_THE_JOB
		fi
	fi
else
	echo "no single user mode"
	exit 1
fi
